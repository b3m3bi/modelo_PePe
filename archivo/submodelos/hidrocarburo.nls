globals [
  num_derrames                         ;; number: registra el número de derrames que han ocurrido durante la simulación
  produccion_dia_hidrocarburo          ;; number: registra la producción diaria de hidrocarburo que llega a los puertos
  distancia_recorrida_dia_hidrocarburo ;; number: registra la distancia que recorren en conjunto los buques que llegan al puerto en un día
  ganancia_dia_hidrocarburo            ;; number: registra la ganancia diaria del petroelo  
  ganancia_mes_hidrocarburo            ;; number: registra la ganancia mensual del petroleo
  produccion_mes_hidrocarburo          ;; number: registra la producción mensual de petroleo
  produccion_total_hidrocarburo        ;; number: registra la producción total de hidrocarburo durante la simulación
  _subsidio_mensual_gasolina           ;; number: clon de la variable SUBSIDIO_MENSUAL_GASOLINA para evitar cambios durante la simulación
  _gasto_en_mantenimiento              ;; number: clon de la variable GASTO_EN_MANTENIMIENTO para evitar cambios durante la simulación 
  meses_crisis_hidrocarburo            ;; number: número de meses que la industria petrolera lleva en crisis
]

to init_hidrocarburo
  print "Inicializando hidrocarburo..."
  
  set num_derrames 0
  set _subsidio_mensual_gasolina SUBSIDIO_MENSUAL_GASOLINA
  set _gasto_en_mantenimiento GASTO_EN_MANTENIMIENTO
  set produccion_total_hidrocarburo 0
  set meses_crisis_hidrocarburo 0
  
  reset_registros_diarios_hidrocarburo
  reset_registros_mensuales_hidrocarburo
  
  ;; se llenan de hidrocarburo las celdas de mar
  ask celdas_mar [
    set hidrocarburo HIDROCARBURO_INICIAL
  ]
  print "OK"
end

to reset_registros_diarios_hidrocarburo
  set produccion_dia_hidrocarburo 0
  set distancia_recorrida_dia_hidrocarburo 0
  set ganancia_dia_hidrocarburo 0
end

to reset_registros_mensuales_hidrocarburo
  set ganancia_mes_hidrocarburo 0
  set produccion_mes_hidrocarburo 0
  ask plataformas [ set ganancia_mes_plataforma 0 ]
end

to subsidiar_gasolina
  if any? plataformas [
    ask embarcaciones [
      set saldo_subsidio_gasolina _subsidio_mensual_gasolina
      set ganancia_mes_hidrocarburo ganancia_mes_hidrocarburo - _subsidio_mensual_gasolina
    ]
  ]
end

to iniciar_derrame [ x y ]
  ask patch x y [
    set derramado? true 
    set tiempo_desde_derrame 0
  ]
end

to dinamica_derrame
  let prob_ocurrencia_derrame _gasto_en_mantenimiento * ( - (MAX_PROB_OCURRENCIA_DERRAME - MIN_PROB_OCURRENCIA_DERRAME) / 5) + MAX_PROB_OCURRENCIA_DERRAME
  if random-float 1.0 < prob_ocurrencia_derrame and any? plataformas with [activo?] [
    let origen one-of plataformas with [activo?]
    ask origen [ set tiempo_en_pausa tiempo_en_pausa + TIEMPO_DERRAMADO ]
    iniciar_derrame [pxcor] of [patch-here] of origen  [pycor] of [patch-here] of origen
    set num_derrames num_derrames + 1
  ]
  extender_derrame
end

to extender_derrame
  let celdas_derramado patches with [derramado?]
  ask celdas_derramado with [tiempo_desde_derrame = 1 ][
    ask neighbors4 with [ tipo = "mar" and not derramado?][
      if random-float 1.0 < PROB_EXTENSION_DERRAME [
        set derramado? true
        set tiempo_desde_derrame 0
        set biomasas (map [b -> b - (b * TASA_MORTALIDAD_DERRAME)] biomasas)
      ]
    ]
  ]
  ask celdas_derramado [
    if random-float 1.0 < MORTALIDAD_TORTUGAS_DERRAME [
      ask tortugas-here [ die ]
    ]
    set tiempo_desde_derrame tiempo_desde_derrame + 1
    if tiempo_desde_derrame > TIEMPO_DERRAMADO [ 
      set derramado? false
      set tiempo_desde_derrame -999
    ]
  ]
end

;to calcular_balance_hidrocarburo
;  let costos_transporte distancia_recorrida_dia_hidrocarburo * COSTO_TRANSPORTE_POR_UNIDAD_DISTANCIA * longitud_celda
;  let costos_mantenimiento (count plataformas) * _gasto_en_mantenimiento * 1000
;  let ganancia_produccion (produccion_dia_hidrocarburo * PRECIO_CRUDO)
;  set ganancia_dia_hidrocarburo ganancia_produccion - costos_transporte - costos_mantenimiento
;  set ganancia_mes_hidrocarburo ganancia_mes_hidrocarburo + ganancia_dia_hidrocarburo
;end
