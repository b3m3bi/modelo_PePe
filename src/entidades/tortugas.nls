breed [ tortugas tortuga ]

tortugas-own [
  estado                       ;; string: estado en el que están las torguas: "migracion" "anidamiento" "alimentacion"
  tiempo_llegue_alimentacion   ;; number: días desde que la tortuga llegó a la zona de alimentación (buffer antes de que actue la mortalidad por sobrepoblación)
]

globals [ 
  _meses_migracion             ;; list (number): clon de MESES_MIGRACION con el número de mes cuando migran de ida y de regreso
  celdas_alimentacion      ;; agentset (patches): celdas donde las tortugas pasan su etapa anual de alimentacion
  celdas_reproduccion      ;; agentset (patches): celdas donde las tortugas pasan su etapa anual reproductiva
  
]

to init_tortugas
  print "Inicializando tortugas..."
  set _meses_migracion read-from-string MESES_MIGRACION
  ask celdas_mar [
    set vecinos_derecha (patch-set (patch-at-heading-and-distance 45 1) (patch-at-heading-and-distance 90 1) (patch-at-heading-and-distance 135 1)) with [ tipo = "mar" ]
    set vecinos_izquierda (patch-set (patch-at-heading-and-distance -45 1) (patch-at-heading-and-distance -90 1) (patch-at-heading-and-distance -135 1)) with [ tipo = "mar" ]
  ]
  
;  set celdas_reproduccion patches with [ num_region = 1 ]
  set celdas_reproduccion patches with [ pxcor >  (max-pxcor - LONG_TIERRA  - 5) and pxcor <= max-pxcor - LONG_TIERRA  ]
;  set celdas_alimentacion patches with [ num_region = 3 ]
  set celdas_alimentacion patches with [ pxcor <  min-pxcor + 13]
  
  
  ;; se crean las tortugas
  create-tortugas TAMANIO_POB_INICIAL_TORTUGAS [
    set shape "tortuga"
    set color brown + 1
    set size 0.4
    move-to one-of celdas_alimentacion
    set estado "alimentacion"
    set tiempo_llegue_alimentacion 60
  ]
  
  print "OK"
end

to dinamica_tortugas
  ;; actualizar estado de migración
  if time:get "month" fecha = (item 0 _meses_migracion) [
    ask tortugas [ set estado "migracion ida" ]
  ]
  if time:get "month" fecha = (item 1 _meses_migracion) [
    ask tortugas [ set estado "migracion regreso" set tiempo_llegue_alimentacion 0 ]
  ]
  ;; movimiento
  ask tortugas [ moverse_tortuga]
  ;; reproducción
  if (time:get "dayofyear"  fecha = DIA_REPRODUCCION_TORTUGAS) [ reproducirse_tortugas ]
  ;; mortalidad
  mortalidad_sobrepoblacion
end

to reproducirse_tortugas
  ask tortugas [
    hatch NUM_DESCENDIENTES_TORTUGAS
  ]
end

to mortalidad_sobrepoblacion
  ask celdas_alimentacion [
    let tortugas_alimentacion tortugas-here with [tiempo_llegue_alimentacion > TIEMPO_BUFFER_TORTUGAS]
    if count tortugas_alimentacion > CAPACIDAD_CARGA_TORTUGAS [
      ask n-of (count tortugas_alimentacion - CAPACIDAD_CARGA_TORTUGAS) tortugas_alimentacion [ die ]
    ]
  ]
end

to moverse_tortuga
  ;; si ya llegué a las regiones de reproducción y alimentación
  if estado = "migracion ida" and member? patch-here celdas_reproduccion [ set estado "reproduccion" ]
  if estado = "migracion regreso" and member? patch-here celdas_alimentacion [ set estado "alimentacion" ]
  
  ;; se mueven
  let vecindad_moore_1 [[-1 -1] [-1 0] [-1 1] [0 -1] [0 1] [1 -1] [1 0] [1 1]]
  if estado = "alimentacion" [ face one-of celdas_alimentacion at-points vecindad_moore_1 set tiempo_llegue_alimentacion tiempo_llegue_alimentacion + 1 ]
  if estado = "reproduccion" [ face one-of celdas_reproduccion at-points vecindad_moore_1 ]
  if estado = "migracion ida"[ face one-of vecinos_derecha ]
  if estado = "migracion regreso" [ face one-of vecinos_izquierda ]
  jump 1    
end