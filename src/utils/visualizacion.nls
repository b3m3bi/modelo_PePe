breed [ etiquetas_region etiqueta_region ]

to colorear_celdas
  
  ask plataformas [
    set plabel ""
  ]
  
  if COLOREAR_POR = "tipo" [
    ask celdas_tierra [ set pcolor green ]
    ask celdas_mar    [ set pcolor sky   ]
  ]
  
  if COLOREAR_POR = "biomasa total" [
    let max_biomasa_total sum sublist (read-from-string Ks) 0 _num_especies
    ask patches [
      set pcolor scale-color sky (sum biomasas) (max_biomasa_total * 2) 0 
    ]
  ]  
  
  if COLOREAR_POR = "biomasa total especie" [
    colorear_biomasa_total_especie
  ]
  
  if COLOREAR_POR = "zonificacion" [
    ask patches with [ zonificacion = "NA"][ set pcolor white ]
    ask patches with [ zonificacion = "libre" ][ set pcolor sky ]
    colorear_zonificacion_protegido_y_restriccion
  ]
  
  if COLOREAR_POR = "biomasa, zonificacion y derrames" [
    colorear_biomasa_total_especie
    colorear_zonificacion_protegido_y_restriccion
    colorear_derrames
  ]
  
  if COLOREAR_POR = "hidrocarburo" [
    ask patches [
      set pcolor scale-color black hidrocarburo HIDROCARBURO_INICIAL 0
    ]
    ask plataformas [
      set plabel (word (round ganancia_dia) "     ")
      set plabel-color white
    ]
  ]
  
  if COLOREAR_POR = "derrames" [
    ask patches [
      set pcolor white
    ]
    colorear_derrames
  ]
  
  if COLOREAR_POR = "habitat tortugas" [
    ask patches [
      set pcolor sky
      if tipo = "tierra" [ set pcolor green ]
      if zona_anidamiento?  [ set pcolor yellow ]
      if zona_alimentacion? [ set pcolor sky - 1 ]
    ]
  ]
end

to colorear_derrames
  if any? patches with [ derramado? ][
      ask patches with [ derramado? ] [
        set pcolor black
      ]
    ] 
end

to colorear_biomasa_total_especie
  ask patches [ set pcolor white ]
  let colores_especies (list cyan sky blue)
  foreach (range _num_especies) [
    i ->
    let max_biomasa_sp item i (read-from-string Ks)
    ask patches with [ item i habitats = 1 ][
      set pcolor scale-color (item i colores_especies) (item i biomasas) (max_biomasa_sp * 2) 0
    ]
  ]
end

to colorear_zonificacion_protegido_y_restriccion
  ask patches with [ zonificacion = "protegido"   ][ set pcolor lime + 2 ]
  ask patches with [ zonificacion = "restriccion" ][ set pcolor red + 1 ]  
end

to dibujar_regiones
  foreach (range 1 (num_regiones + 1)) [
    i -> dibujar_borde_region i
  ]
end

to dibujar_borde_region [_num_region]
  ask patches with [ num_region = _num_region][
    sprout 1 [
      set heading 0
      set color black + 2
      set pen-size 1.5
      setxy (xcor - 0.5) (ycor - 0.5)
      repeat 4 [
        let cuadro_izquierda patch-left-and-ahead 45 0.5
        ifelse (cuadro_izquierda != nobody and [num_region] of cuadro_izquierda != [num_region] of myself) or cuadro_izquierda = nobody
        [pen-down]
        [pen-up]
        fd .99
        rt 90
      ]
      die
    ]
  ]
end

to colocar_etiquetas_regiones
  foreach (range 1 (num_regiones + 1)) [
    i ->
    ask patches with [num_region = i] with-min [pxcor] with-max [pycor][
      sprout-etiquetas_region 1 [
        set label (word num_region " ")
        set label-color black
        set shape "vacio"
        setxy (xcor + 0.2 ) (ycor - 0.1)
      ]
    ]
  ]
end

to dibujar_borde [celdas]
  ask celdas [
    sprout 1 [
      set heading 0
      if zonificacion = "restriccion" [ set color red ]
      if zonificacion = "protegido"   [ set color lime ]
      set pen-size 1.5
      setxy (xcor - 0.5) (ycor - 0.5)
      repeat 4 [
        pen-down
        fd .99
        rt 90
      ]
      die
    ]
  ]
end 

;to dibujar_borde_zona [_num_zona ]
;  ask patches with [ num_zona = _num_zona][
;    sprout 1 [
;      set heading 0
;      if zonificacion = "restriccion" [ set color red ]
;      if zonificacion = "protegido"   [ set color lime ]
;      set pen-size 1.5
;      setxy (xcor - 0.5) (ycor - 0.5)
;      repeat 4 [
;        let cuadro_izquierda patch-left-and-ahead 45 0.5
;        ifelse (cuadro_izquierda != nobody and [num_zona] of cuadro_izquierda != [num_zona] of myself) or cuadro_izquierda = nobody
;        [pen-down]
;        [pen-up]
;        fd .99
;        rt 90
;      ]
;      die
;    ]
;  ]
;end
;  
;to dibujar_bordes_zonas
;  clear-drawing
;  foreach (range 0 (num_zonas)) [
;    i -> dibujar_borde_zona i
;  ]
;end